# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-31 15:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../library/__main__.rst:3
msgid ":mod:`__main__` --- Top-level script environment"
msgstr ""

#: ../../library/__main__.rst:8
msgid "``'__main__'`` is the name of the scope in which top-level code executes. A module's __name__ is set equal to ``'__main__'`` when read from standard input, a script, or from an interactive prompt."
msgstr ""

#: ../../library/__main__.rst:12
msgid "A module can discover whether or not it is running in the main scope by checking its own ``__name__``, which allows a common idiom for conditionally executing code in a module when it is run as a script or with ``python -m`` but not when it is imported::"
msgstr ""

#: ../../library/__main__.rst:21
msgid "For a package, the same effect can be achieved by including a ``__main__.py`` module, the contents of which will be executed when the module is run with ``-m``."
msgstr ""

