# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-31 15:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../library/webbrowser.rst:2
msgid ":mod:`webbrowser` --- Convenient Web-browser controller"
msgstr ""

#: ../../library/webbrowser.rst:9
msgid "**Source code:** :source:`Lib/webbrowser.py`"
msgstr ""

#: ../../library/webbrowser.rst:13
msgid "The :mod:`webbrowser` module provides a high-level interface to allow displaying Web-based documents to users. Under most circumstances, simply calling the :func:`.open` function from this module will do the right thing."
msgstr ""

#: ../../library/webbrowser.rst:17
msgid "Under Unix, graphical browsers are preferred under X11, but text-mode browsers will be used if graphical browsers are not available or an X11 display isn't available.  If text-mode browsers are used, the calling process will block until the user exits the browser."
msgstr ""

#: ../../library/webbrowser.rst:22
msgid "If the environment variable :envvar:`BROWSER` exists, it is interpreted as the :data:`os.pathsep`-separated list of browsers to try ahead of the platform defaults.  When the value of a list part contains the string ``%s``, then it is interpreted as a literal browser command line to be used with the argument URL substituted for ``%s``; if the part does not contain ``%s``, it is simply interpreted as the name of the browser to launch. [1]_"
msgstr ""

#: ../../library/webbrowser.rst:29
msgid "For non-Unix platforms, or when a remote browser is available on Unix, the controlling process will not wait for the user to finish with the browser, but allow the remote browser to maintain its own windows on the display.  If remote browsers are not available on Unix, the controlling process will launch a new browser and wait."
msgstr ""

#: ../../library/webbrowser.rst:35
msgid "The script :program:`webbrowser` can be used as a command-line interface for the module. It accepts an URL as the argument. It accepts the following optional parameters: ``-n`` opens the URL in a new browser window, if possible; ``-t`` opens the URL in a new browser page (\"tab\"). The options are, naturally, mutually exclusive.  Usage example::"
msgstr ""

#: ../../library/webbrowser.rst:43
msgid "The following exception is defined:"
msgstr ""

#: ../../library/webbrowser.rst:48
msgid "Exception raised when a browser control error occurs."
msgstr ""

#: ../../library/webbrowser.rst:50
msgid "The following functions are defined:"
msgstr ""

#: ../../library/webbrowser.rst:55
msgid "Display *url* using the default browser. If *new* is 0, the *url* is opened in the same browser window if possible.  If *new* is 1, a new browser window is opened if possible.  If *new* is 2, a new browser page (\"tab\") is opened if possible.  If *autoraise* is ``True``, the window is raised if possible (note that under many window managers this will occur regardless of the setting of this variable)."
msgstr ""

#: ../../library/webbrowser.rst:62
msgid "Note that on some platforms, trying to open a filename using this function, may work and start the operating system's associated program.  However, this is neither supported nor portable."
msgstr ""

#: ../../library/webbrowser.rst:69
msgid "Open *url* in a new window of the default browser, if possible, otherwise, open *url* in the only browser window."
msgstr ""

#: ../../library/webbrowser.rst:74
msgid "Open *url* in a new page (\"tab\") of the default browser, if possible, otherwise equivalent to :func:`open_new`."
msgstr ""

#: ../../library/webbrowser.rst:80
msgid "Return a controller object for the browser type *using*.  If *using* is ``None``, return a controller for a default browser appropriate to the caller's environment."
msgstr ""

#: ../../library/webbrowser.rst:87
msgid "Register the browser type *name*.  Once a browser type is registered, the :func:`get` function can return a controller for that browser type.  If *instance* is not provided, or is ``None``, *constructor* will be called without parameters to create an instance when needed.  If *instance* is provided, *constructor* will never be called, and may be ``None``."
msgstr ""

#: ../../library/webbrowser.rst:93
msgid "This entry point is only useful if you plan to either set the :envvar:`BROWSER` variable or call :func:`get` with a nonempty argument matching the name of a handler you declare."
msgstr ""

#: ../../library/webbrowser.rst:97
msgid "A number of browser types are predefined.  This table gives the type names that may be passed to the :func:`get` function and the corresponding instantiations for the controller classes, all defined in this module."
msgstr ""

#: ../../library/webbrowser.rst:102
msgid "Type Name"
msgstr ""

#: ../../library/webbrowser.rst:102
msgid "Class Name"
msgstr ""

#: ../../library/webbrowser.rst:102
msgid "Notes"
msgstr ""

#: ../../library/webbrowser.rst:104
msgid "``'mozilla'``"
msgstr ""

#: ../../library/webbrowser.rst:104
#: ../../library/webbrowser.rst:106
msgid ":class:`Mozilla('mozilla')`"
msgstr ""

#: ../../library/webbrowser.rst:106
msgid "``'firefox'``"
msgstr ""

#: ../../library/webbrowser.rst:108
msgid "``'netscape'``"
msgstr ""

#: ../../library/webbrowser.rst:108
msgid ":class:`Mozilla('netscape')`"
msgstr ""

#: ../../library/webbrowser.rst:110
msgid "``'galeon'``"
msgstr ""

#: ../../library/webbrowser.rst:110
msgid ":class:`Galeon('galeon')`"
msgstr ""

#: ../../library/webbrowser.rst:112
msgid "``'epiphany'``"
msgstr ""

#: ../../library/webbrowser.rst:112
msgid ":class:`Galeon('epiphany')`"
msgstr ""

#: ../../library/webbrowser.rst:114
msgid "``'skipstone'``"
msgstr ""

#: ../../library/webbrowser.rst:114
msgid ":class:`BackgroundBrowser('skipstone')`"
msgstr ""

#: ../../library/webbrowser.rst:116
msgid "``'kfmclient'``"
msgstr ""

#: ../../library/webbrowser.rst:116
#: ../../library/webbrowser.rst:118
#: ../../library/webbrowser.rst:120
msgid ":class:`Konqueror()`"
msgstr ""

#: ../../library/webbrowser.rst:116
#: ../../library/webbrowser.rst:118
#: ../../library/webbrowser.rst:120
msgid "\\(1)"
msgstr ""

#: ../../library/webbrowser.rst:118
msgid "``'konqueror'``"
msgstr ""

#: ../../library/webbrowser.rst:120
msgid "``'kfm'``"
msgstr ""

#: ../../library/webbrowser.rst:122
msgid "``'mosaic'``"
msgstr ""

#: ../../library/webbrowser.rst:122
msgid ":class:`BackgroundBrowser('mosaic')`"
msgstr ""

#: ../../library/webbrowser.rst:124
msgid "``'opera'``"
msgstr ""

#: ../../library/webbrowser.rst:124
msgid ":class:`Opera()`"
msgstr ""

#: ../../library/webbrowser.rst:126
msgid "``'grail'``"
msgstr ""

#: ../../library/webbrowser.rst:126
msgid ":class:`Grail()`"
msgstr ""

#: ../../library/webbrowser.rst:128
msgid "``'links'``"
msgstr ""

#: ../../library/webbrowser.rst:128
msgid ":class:`GenericBrowser('links')`"
msgstr ""

#: ../../library/webbrowser.rst:130
msgid "``'elinks'``"
msgstr ""

#: ../../library/webbrowser.rst:130
msgid ":class:`Elinks('elinks')`"
msgstr ""

#: ../../library/webbrowser.rst:132
msgid "``'lynx'``"
msgstr ""

#: ../../library/webbrowser.rst:132
msgid ":class:`GenericBrowser('lynx')`"
msgstr ""

#: ../../library/webbrowser.rst:134
msgid "``'w3m'``"
msgstr ""

#: ../../library/webbrowser.rst:134
msgid ":class:`GenericBrowser('w3m')`"
msgstr ""

#: ../../library/webbrowser.rst:136
msgid "``'windows-default'``"
msgstr ""

#: ../../library/webbrowser.rst:136
msgid ":class:`WindowsDefault`"
msgstr ""

#: ../../library/webbrowser.rst:136
msgid "\\(2)"
msgstr ""

#: ../../library/webbrowser.rst:138
msgid "``'macosx'``"
msgstr ""

#: ../../library/webbrowser.rst:138
msgid ":class:`MacOSX('default')`"
msgstr ""

#: ../../library/webbrowser.rst:138
#: ../../library/webbrowser.rst:140
msgid "\\(3)"
msgstr ""

#: ../../library/webbrowser.rst:140
msgid "``'safari'``"
msgstr ""

#: ../../library/webbrowser.rst:140
msgid ":class:`MacOSX('safari')`"
msgstr ""

#: ../../library/webbrowser.rst:142
msgid "``'google-chrome'``"
msgstr ""

#: ../../library/webbrowser.rst:142
msgid ":class:`Chrome('google-chrome')`"
msgstr ""

#: ../../library/webbrowser.rst:144
msgid "``'chrome'``"
msgstr ""

#: ../../library/webbrowser.rst:144
msgid ":class:`Chrome('chrome')`"
msgstr ""

#: ../../library/webbrowser.rst:146
msgid "``'chromium'``"
msgstr ""

#: ../../library/webbrowser.rst:146
msgid ":class:`Chromium('chromium')`"
msgstr ""

#: ../../library/webbrowser.rst:148
msgid "``'chromium-browser'``"
msgstr ""

#: ../../library/webbrowser.rst:148
msgid ":class:`Chromium('chromium-browser')`"
msgstr ""

#: ../../library/webbrowser.rst:151
msgid "Notes:"
msgstr ""

#: ../../library/webbrowser.rst:154
msgid "\"Konqueror\" is the file manager for the KDE desktop environment for Unix, and only makes sense to use if KDE is running.  Some way of reliably detecting KDE would be nice; the :envvar:`KDEDIR` variable is not sufficient.  Note also that the name \"kfm\" is used even when using the :program:`konqueror` command with KDE 2 --- the implementation selects the best strategy for running Konqueror."
msgstr ""

#: ../../library/webbrowser.rst:161
msgid "Only on Windows platforms."
msgstr ""

#: ../../library/webbrowser.rst:164
msgid "Only on Mac OS X platform."
msgstr ""

#: ../../library/webbrowser.rst:166
msgid "Support for Chrome/Chromium has been added."
msgstr ""

#: ../../library/webbrowser.rst:169
msgid "Here are some simple examples::"
msgstr ""

#: ../../library/webbrowser.rst:183
msgid "Browser Controller Objects"
msgstr ""

#: ../../library/webbrowser.rst:185
msgid "Browser controllers provide these methods which parallel three of the module-level convenience functions:"
msgstr ""

#: ../../library/webbrowser.rst:191
msgid "Display *url* using the browser handled by this controller. If *new* is 1, a new browser window is opened if possible. If *new* is 2, a new browser page (\"tab\") is opened if possible."
msgstr ""

#: ../../library/webbrowser.rst:198
msgid "Open *url* in a new window of the browser handled by this controller, if possible, otherwise, open *url* in the only browser window.  Alias :func:`open_new`."
msgstr ""

#: ../../library/webbrowser.rst:205
msgid "Open *url* in a new page (\"tab\") of the browser handled by this controller, if possible, otherwise equivalent to :func:`open_new`."
msgstr ""

#: ../../library/webbrowser.rst:210
msgid "Footnotes"
msgstr ""

#: ../../library/webbrowser.rst:211
msgid "Executables named here without a full path will be searched in the directories given in the :envvar:`PATH` environment variable."
msgstr ""

