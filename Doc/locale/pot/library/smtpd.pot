# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-31 15:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../library/smtpd.rst:2
msgid ":mod:`smtpd` --- SMTP Server"
msgstr ""

#: ../../library/smtpd.rst:10
msgid "**Source code:** :source:`Lib/smtpd.py`"
msgstr ""

#: ../../library/smtpd.rst:14
msgid "This module offers several classes to implement SMTP (email) servers."
msgstr ""

#: ../../library/smtpd.rst:16
msgid "Several server implementations are present; one is a generic do-nothing implementation, which can be overridden, while the other two offer specific mail-sending strategies."
msgstr ""

#: ../../library/smtpd.rst:20
msgid "Additionally the SMTPChannel may be extended to implement very specific interaction behaviour with SMTP clients."
msgstr ""

#: ../../library/smtpd.rst:23
msgid "The code supports :RFC:`5321`, plus the :rfc:`1870` SIZE and :rfc:`6531` SMTPUTF8 extensions."
msgstr ""

#: ../../library/smtpd.rst:28
msgid "SMTPServer Objects"
msgstr ""

#: ../../library/smtpd.rst:34
msgid "Create a new :class:`SMTPServer` object, which binds to local address *localaddr*.  It will treat *remoteaddr* as an upstream SMTP relayer.  It inherits from :class:`asyncore.dispatcher`, and so will insert itself into :mod:`asyncore`'s event loop on instantiation."
msgstr ""

#: ../../library/smtpd.rst:39
#: ../../library/smtpd.rst:160
msgid "*data_size_limit* specifies the maximum number of bytes that will be accepted in a ``DATA`` command.  A value of ``None`` or ``0`` means no limit."
msgstr ""

#: ../../library/smtpd.rst:43
msgid "*map* is the socket map to use for connections (an initially empty dictionary is a suitable value).  If not specified the :mod:`asyncore` global socket map is used."
msgstr ""

#: ../../library/smtpd.rst:47
msgid "*enable_SMTPUTF8* determins whether the ``SMTPUTF8`` extension (as defined in :RFC:`6531`) should be enabled.  The default is ``False``.  If set to ``True``, *decode_data* must be ``False`` (otherwise an error is raised). When ``True``, ``SMTPUTF8`` is accepted as a parameter to the ``MAIL`` command and when present is passed to :meth:`process_message` in the ``kwargs['mail_options']`` list."
msgstr ""

#: ../../library/smtpd.rst:54
msgid "*decode_data* specifies whether the data portion of the SMTP transaction should be decoded using UTF-8.  The default is ``True`` for backward compatibility reasons, but will change to ``False`` in Python 3.6; specify the keyword value explicitly to avoid the :exc:`DeprecationWarning`.  When *decode_data* is set to ``False`` the server advertises the ``8BITMIME`` extension (:rfc:`6152`), accepts the ``BODY=8BITMIME`` parameter to the ``MAIL`` command, and when present passes it to :meth:`process_message` in the ``kwargs['mail_options']`` list."
msgstr ""

#: ../../library/smtpd.rst:65
msgid "Raise a :exc:`NotImplementedError` exception. Override this in subclasses to do something useful with this message. Whatever was passed in the constructor as *remoteaddr* will be available as the :attr:`_remoteaddr` attribute. *peer* is the remote host's address, *mailfrom* is the envelope originator, *rcpttos* are the envelope recipients and *data* is a string containing the contents of the e-mail (which should be in :rfc:`5321` format)."
msgstr ""

#: ../../library/smtpd.rst:73
msgid "If the *decode_data* constructor keyword is set to ``True``, the *data* argument will be a unicode string.  If it is set to ``False``, it will be a bytes object."
msgstr ""

#: ../../library/smtpd.rst:77
msgid "*kwargs* is a dictionary containing additional information. It is empty unless at least one of ``decode_data=False`` or ``enable_SMTPUTF8=True`` was given as an init parameter, in which case it contains the following keys:"
msgstr ""

#: ../../library/smtpd.rst:85
msgid "*mail_options*:"
msgstr ""

#: ../../library/smtpd.rst:83
msgid "a list of all received parameters to the ``MAIL`` command (the elements are uppercase strings; example: ``['BODY=8BITMIME', 'SMTPUTF8']``)."
msgstr ""

#: ../../library/smtpd.rst:90
msgid "*rcpt_options*:"
msgstr ""

#: ../../library/smtpd.rst:88
msgid "same as *mail_options* but for the ``RCPT`` command. Currently no ``RCPT TO`` options are supported, so for now this will always be an empty list."
msgstr ""

#: ../../library/smtpd.rst:92
msgid "Implementations of ``process_message`` should use the ``**kwargs`` signature to accept arbitrary keyword arguments, since future feature enhancements may add keys to the kwargs dictionary."
msgstr ""

#: ../../library/smtpd.rst:96
msgid "Return ``None`` to request a normal ``250 Ok`` response; otherwise return the desired response string in :RFC:`5321` format."
msgstr ""

#: ../../library/smtpd.rst:101
msgid "Override this in subclasses to use a custom :class:`SMTPChannel` for managing SMTP clients."
msgstr ""

#: ../../library/smtpd.rst:104
msgid "The *map* constructor argument."
msgstr ""

#: ../../library/smtpd.rst:107
msgid "*localaddr* and *remoteaddr* may now contain IPv6 addresses."
msgstr ""

#: ../../library/smtpd.rst:110
msgid "the *decode_data* and *enable_SMTPUTF8* constructor arguments, and the *kwargs* argument to :meth:`process_message` when one or more of these is specified."
msgstr ""

#: ../../library/smtpd.rst:117
msgid "DebuggingServer Objects"
msgstr ""

#: ../../library/smtpd.rst:122
msgid "Create a new debugging server.  Arguments are as per :class:`SMTPServer`. Messages will be discarded, and printed on stdout."
msgstr ""

#: ../../library/smtpd.rst:127
msgid "PureProxy Objects"
msgstr ""

#: ../../library/smtpd.rst:132
msgid "Create a new pure proxy server. Arguments are as per :class:`SMTPServer`. Everything will be relayed to *remoteaddr*.  Note that running this has a good chance to make you into an open relay, so please be careful."
msgstr ""

#: ../../library/smtpd.rst:138
msgid "MailmanProxy Objects"
msgstr ""

#: ../../library/smtpd.rst:143
msgid "Create a new pure proxy server. Arguments are as per :class:`SMTPServer`. Everything will be relayed to *remoteaddr*, unless local mailman configurations knows about an address, in which case it will be handled via mailman.  Note that running this has a good chance to make you into an open relay, so please be careful."
msgstr ""

#: ../../library/smtpd.rst:150
msgid "SMTPChannel Objects"
msgstr ""

#: ../../library/smtpd.rst:155
msgid "Create a new :class:`SMTPChannel` object which manages the communication between the server and a single SMTP client."
msgstr ""

#: ../../library/smtpd.rst:158
msgid "*conn* and *addr* are as per the instance variables described below."
msgstr ""

#: ../../library/smtpd.rst:164
msgid "*enable_SMTPUTF8* determins whether the ``SMTPUTF8`` extension (as defined in :RFC:`6531`) should be enabled.  The default is ``False``.  A :exc:`ValueError` is raised if both *enable_SMTPUTF8* and *decode_data* are set to ``True`` at the same time."
msgstr ""

#: ../../library/smtpd.rst:169
msgid "A dictionary can be specified in *map* to avoid using a global socket map."
msgstr ""

#: ../../library/smtpd.rst:171
msgid "*decode_data* specifies whether the data portion of the SMTP transaction should be decoded using UTF-8.  The default is ``True`` for backward compatibility reasons, but will change to ``False`` in Python 3.6.  Specify the keyword value explicitly to avoid the :exc:`DeprecationWarning`."
msgstr ""

#: ../../library/smtpd.rst:176
msgid "To use a custom SMTPChannel implementation you need to override the :attr:`SMTPServer.channel_class` of your :class:`SMTPServer`."
msgstr ""

#: ../../library/smtpd.rst:179
msgid "the *decode_data* and *enable_SMTPUTF8* arguments were added."
msgstr ""

#: ../../library/smtpd.rst:182
msgid "The :class:`SMTPChannel` has the following instance variables:"
msgstr ""

#: ../../library/smtpd.rst:186
msgid "Holds the :class:`SMTPServer` that spawned this channel."
msgstr ""

#: ../../library/smtpd.rst:190
msgid "Holds the socket object connecting to the client."
msgstr ""

#: ../../library/smtpd.rst:194
msgid "Holds the address of the client, the second value returned by :func:`socket.accept <socket.socket.accept>`"
msgstr ""

#: ../../library/smtpd.rst:199
msgid "Holds a list of the line strings (decoded using UTF-8) received from the client. The lines have their ``\"\\r\\n\"`` line ending translated to ``\"\\n\"``."
msgstr ""

#: ../../library/smtpd.rst:205
msgid "Holds the current state of the channel. This will be either :attr:`COMMAND` initially and then :attr:`DATA` after the client sends a \"DATA\" line."
msgstr ""

#: ../../library/smtpd.rst:211
msgid "Holds a string containing the greeting sent by the client in its \"HELO\"."
msgstr ""

#: ../../library/smtpd.rst:215
msgid "Holds a string containing the address identified in the \"MAIL FROM:\" line from the client."
msgstr ""

#: ../../library/smtpd.rst:220
msgid "Holds a list of strings containing the addresses identified in the \"RCPT TO:\" lines from the client."
msgstr ""

#: ../../library/smtpd.rst:225
msgid "Holds a string containing all of the data sent by the client during the DATA state, up to but not including the terminating ``\"\\r\\n.\\r\\n\"``."
msgstr ""

#: ../../library/smtpd.rst:230
msgid "Holds the fully-qualified domain name of the server as returned by :func:`socket.getfqdn`."
msgstr ""

#: ../../library/smtpd.rst:235
msgid "Holds the name of the client peer as returned by ``conn.getpeername()`` where ``conn`` is :attr:`conn`."
msgstr ""

#: ../../library/smtpd.rst:238
msgid "The :class:`SMTPChannel` operates by invoking methods named ``smtp_<command>`` upon reception of a command line from the client. Built into the base :class:`SMTPChannel` class are methods for handling the following commands (and responding to them appropriately):"
msgstr ""

#: ../../library/smtpd.rst:244
msgid "Command"
msgstr ""

#: ../../library/smtpd.rst:244
msgid "Action taken"
msgstr ""

#: ../../library/smtpd.rst:246
msgid "HELO"
msgstr ""

#: ../../library/smtpd.rst:246
msgid "Accepts the greeting from the client and stores it in :attr:`seen_greeting`.  Sets server to base command mode."
msgstr ""

#: ../../library/smtpd.rst:248
msgid "EHLO"
msgstr ""

#: ../../library/smtpd.rst:248
msgid "Accepts the greeting from the client and stores it in :attr:`seen_greeting`.  Sets server to extended command mode."
msgstr ""

#: ../../library/smtpd.rst:250
msgid "NOOP"
msgstr ""

#: ../../library/smtpd.rst:250
msgid "Takes no action."
msgstr ""

#: ../../library/smtpd.rst:251
msgid "QUIT"
msgstr ""

#: ../../library/smtpd.rst:251
msgid "Closes the connection cleanly."
msgstr ""

#: ../../library/smtpd.rst:252
msgid "MAIL"
msgstr ""

#: ../../library/smtpd.rst:252
msgid "Accepts the \"MAIL FROM:\" syntax and stores the supplied address as :attr:`mailfrom`.  In extended command mode, accepts the :rfc:`1870` SIZE attribute and responds appropriately based on the value of *data_size_limit*."
msgstr ""

#: ../../library/smtpd.rst:256
msgid "RCPT"
msgstr ""

#: ../../library/smtpd.rst:256
msgid "Accepts the \"RCPT TO:\" syntax and stores the supplied addresses in the :attr:`rcpttos` list."
msgstr ""

#: ../../library/smtpd.rst:258
msgid "RSET"
msgstr ""

#: ../../library/smtpd.rst:258
msgid "Resets the :attr:`mailfrom`, :attr:`rcpttos`, and :attr:`received_data`, but not the greeting."
msgstr ""

#: ../../library/smtpd.rst:260
msgid "DATA"
msgstr ""

#: ../../library/smtpd.rst:260
msgid "Sets the internal state to :attr:`DATA` and stores remaining lines from the client in :attr:`received_data` until the terminator ``\"\\r\\n.\\r\\n\"`` is received."
msgstr ""

#: ../../library/smtpd.rst:263
msgid "HELP"
msgstr ""

#: ../../library/smtpd.rst:263
msgid "Returns minimal information on command syntax"
msgstr ""

#: ../../library/smtpd.rst:264
msgid "VRFY"
msgstr ""

#: ../../library/smtpd.rst:264
msgid "Returns code 252 (the server doesn't know if the address is valid)"
msgstr ""

#: ../../library/smtpd.rst:265
msgid "EXPN"
msgstr ""

#: ../../library/smtpd.rst:265
msgid "Reports that the command is not implemented."
msgstr ""

