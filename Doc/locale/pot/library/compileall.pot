# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-01-31 15:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../library/compileall.rst:2
msgid ":mod:`compileall` --- Byte-compile Python libraries"
msgstr ""

#: ../../library/compileall.rst:7
msgid "**Source code:** :source:`Lib/compileall.py`"
msgstr ""

#: ../../library/compileall.rst:12
msgid "This module provides some utility functions to support installing Python libraries.  These functions compile Python source files in a directory tree. This module can be used to create the cached byte-code files at library installation time, which makes them available for use even by users who don't have write permission to the library directories."
msgstr ""

#: ../../library/compileall.rst:20
msgid "Command-line use"
msgstr ""

#: ../../library/compileall.rst:22
msgid "This module can work as a script (using :program:`python -m compileall`) to compile Python sources."
msgstr ""

#: ../../library/compileall.rst:30
msgid "Positional arguments are files to compile or directories that contain source files, traversed recursively.  If no argument is given, behave as if the command line was ``-l <directories from sys.path>``."
msgstr ""

#: ../../library/compileall.rst:36
msgid "Do not recurse into subdirectories, only compile source code files directly contained in the named or implied directories."
msgstr ""

#: ../../library/compileall.rst:41
msgid "Force rebuild even if timestamps are up-to-date."
msgstr ""

#: ../../library/compileall.rst:45
msgid "Do not print the list of files compiled. If passed once, error messages will still be printed. If passed twice (``-qq``), all output is suppressed."
msgstr ""

#: ../../library/compileall.rst:50
msgid "Directory prepended to the path to each file being compiled.  This will appear in compilation time tracebacks, and is also compiled in to the byte-code file, where it will be used in tracebacks and other messages in cases where the source file does not exist at the time the byte-code file is executed."
msgstr ""

#: ../../library/compileall.rst:58
msgid "regex is used to search the full path to each file considered for compilation, and if the regex produces a match, the file is skipped."
msgstr ""

#: ../../library/compileall.rst:63
msgid "Read the file ``list`` and add each line that it contains to the list of files and directories to compile.  If ``list`` is ``-``, read lines from ``stdin``."
msgstr ""

#: ../../library/compileall.rst:69
msgid "Write the byte-code files to their legacy locations and names, which may overwrite byte-code files created by another version of Python.  The default is to write files to their :pep:`3147` locations and names, which allows byte-code files from multiple versions of Python to coexist."
msgstr ""

#: ../../library/compileall.rst:76
msgid "Control the maximum recursion level for subdirectories. If this is given, then ``-l`` option will not be taken into account. :program:`python -m compileall <directory> -r 0` is equivalent to :program:`python -m compileall <directory> -l`."
msgstr ""

#: ../../library/compileall.rst:83
msgid "Use *N* workers to compile the files within the given directory. If ``0`` is used, then the result of :func:`os.cpu_count()` will be used."
msgstr ""

#: ../../library/compileall.rst:87
msgid "Added the ``-i``, ``-b`` and ``-h`` options."
msgstr ""

#: ../../library/compileall.rst:90
msgid "Added the  ``-j``, ``-r``, and ``-qq`` options.  ``-q`` option was changed to a multilevel value.  ``-b`` will always produce a byte-code file ending in ``.pyc``, never ``.pyo``."
msgstr ""

#: ../../library/compileall.rst:96
msgid "There is no command-line option to control the optimization level used by the :func:`compile` function, because the Python interpreter itself already provides the option: :program:`python -O -m compileall`."
msgstr ""

#: ../../library/compileall.rst:101
msgid "Public functions"
msgstr ""

#: ../../library/compileall.rst:105
msgid "Recursively descend the directory tree named by *dir*, compiling all :file:`.py` files along the way."
msgstr ""

#: ../../library/compileall.rst:108
msgid "The *maxlevels* parameter is used to limit the depth of the recursion; it defaults to ``10``."
msgstr ""

#: ../../library/compileall.rst:111
msgid "If *ddir* is given, it is prepended to the path to each file being compiled for use in compilation time tracebacks, and is also compiled in to the byte-code file, where it will be used in tracebacks and other messages in cases where the source file does not exist at the time the byte-code file is executed."
msgstr ""

#: ../../library/compileall.rst:117
msgid "If *force* is true, modules are re-compiled even if the timestamps are up to date."
msgstr ""

#: ../../library/compileall.rst:120
msgid "If *rx* is given, its search method is called on the complete path to each file considered for compilation, and if it returns a true value, the file is skipped."
msgstr ""

#: ../../library/compileall.rst:124
#: ../../library/compileall.rst:170
msgid "If *quiet* is ``False`` or ``0`` (the default), the filenames and other information are printed to standard out. Set to ``1``, only errors are printed. Set to ``2``, all output is suppressed."
msgstr ""

#: ../../library/compileall.rst:128
#: ../../library/compileall.rst:174
msgid "If *legacy* is true, byte-code files are written to their legacy locations and names, which may overwrite byte-code files created by another version of Python.  The default is to write files to their :pep:`3147` locations and names, which allows byte-code files from multiple versions of Python to coexist."
msgstr ""

#: ../../library/compileall.rst:134
#: ../../library/compileall.rst:180
msgid "*optimize* specifies the optimization level for the compiler.  It is passed to the built-in :func:`compile` function."
msgstr ""

#: ../../library/compileall.rst:137
msgid "The argument *workers* specifies how many workers are used to compile files in parallel. The default is to not use multiple workers. If the platform can't use multiple workers and *workers* argument is given, then sequential compilation will be used as a fallback.  If *workers* is lower than ``0``, a :exc:`ValueError` will be raised."
msgstr ""

#: ../../library/compileall.rst:143
#: ../../library/compileall.rst:200
msgid "Added the *legacy* and *optimize* parameter."
msgstr ""

#: ../../library/compileall.rst:146
msgid "Added the *workers* parameter."
msgstr ""

#: ../../library/compileall.rst:149
#: ../../library/compileall.rst:185
#: ../../library/compileall.rst:203
msgid "*quiet* parameter was changed to a multilevel value."
msgstr ""

#: ../../library/compileall.rst:152
#: ../../library/compileall.rst:188
#: ../../library/compileall.rst:206
msgid "The *legacy* parameter only writes out ``.pyc`` files, not ``.pyo`` files no matter what the value of *optimize* is."
msgstr ""

#: ../../library/compileall.rst:158
msgid "Compile the file with path *fullname*."
msgstr ""

#: ../../library/compileall.rst:160
msgid "If *ddir* is given, it is prepended to the path to the file being compiled for use in compilation time tracebacks, and is also compiled in to the byte-code file, where it will be used in tracebacks and other messages in cases where the source file does not exist at the time the byte-code file is executed."
msgstr ""

#: ../../library/compileall.rst:166
msgid "If *rx* is given, its search method is passed the full path name to the file being compiled, and if it returns a true value, the file is not compiled and ``True`` is returned."
msgstr ""

#: ../../library/compileall.rst:194
msgid "Byte-compile all the :file:`.py` files found along ``sys.path``. If *skip_curdir* is true (the default), the current directory is not included in the search.  All other parameters are passed to the :func:`compile_dir` function.  Note that unlike the other compile functions, ``maxlevels`` defaults to ``0``."
msgstr ""

#: ../../library/compileall.rst:210
msgid "To force a recompile of all the :file:`.py` files in the :file:`Lib/` subdirectory and all its subdirectories::"
msgstr ""

#: ../../library/compileall.rst:224
msgid "Module :mod:`py_compile`"
msgstr ""

#: ../../library/compileall.rst:225
msgid "Byte-compile a single source file."
msgstr ""

