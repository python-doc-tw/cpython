# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5 TW\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-11-18 18:19-0600\n"
"PO-Revision-Date: 2016-11-19 00:31+0000\n"
"Last-Translator: Liang Bo Wang <me@liang2.tw>\n"
"Language-Team: Chinese Traditional (http://www.transifex.com/python-tw-doc/python-35-tw/language/zh-Hant/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh-Hant\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/ipaddress.rst:2
msgid ":mod:`ipaddress` --- IPv4/IPv6 manipulation library"
msgstr ""

#: ../../library/ipaddress.rst:9
msgid "**Source code:** :source:`Lib/ipaddress.py`"
msgstr ""

#: ../../library/ipaddress.rst:13
msgid ""
":mod:`ipaddress` provides the capabilities to create, manipulate and operate"
" on IPv4 and IPv6 addresses and networks."
msgstr ""

#: ../../library/ipaddress.rst:16
msgid ""
"The functions and classes in this module make it straightforward to handle "
"various tasks related to IP addresses, including checking whether or not two"
" hosts are on the same subnet, iterating over all hosts in a particular "
"subnet, checking whether or not a string represents a valid IP address or "
"network definition, and so on."
msgstr ""

#: ../../library/ipaddress.rst:22
msgid ""
"This is the full module API referenceâ€”for an overview and introduction, see "
":ref:`ipaddress-howto`."
msgstr ""

#: ../../library/ipaddress.rst:29
msgid "Convenience factory functions"
msgstr ""

#: ../../library/ipaddress.rst:31
msgid ""
"The :mod:`ipaddress` module provides factory functions to conveniently "
"create IP addresses, networks and interfaces:"
msgstr ""

#: ../../library/ipaddress.rst:36
msgid ""
"Return an :class:`IPv4Address` or :class:`IPv6Address` object depending on "
"the IP address passed as argument.  Either IPv4 or IPv6 addresses may be "
"supplied; integers less than 2**32 will be considered to be IPv4 by default."
" A :exc:`ValueError` is raised if *address* does not represent a valid IPv4 "
"or IPv6 address."
msgstr ""

#: ../../library/ipaddress.rst:57
msgid ""
"Return an :class:`IPv4Network` or :class:`IPv6Network` object depending on "
"the IP address passed as argument.  *address* is a string or integer "
"representing the IP network.  Either IPv4 or IPv6 networks may be supplied; "
"integers less than 2**32 will be considered to be IPv4 by default.  *strict*"
" is passed to :class:`IPv4Network` or :class:`IPv6Network` constructor.  A "
":exc:`ValueError` is raised if *address* does not represent a valid IPv4 or "
"IPv6 address, or if the network has host bits set."
msgstr ""

#: ../../library/ipaddress.rst:71
msgid ""
"Return an :class:`IPv4Interface` or :class:`IPv6Interface` object depending "
"on the IP address passed as argument.  *address* is a string or integer "
"representing the IP address.  Either IPv4 or IPv6 addresses may be supplied;"
" integers less than 2**32 will be considered to be IPv4 by default.  A "
":exc:`ValueError` is raised if *address* does not represent a valid IPv4 or "
"IPv6 address."
msgstr ""

#: ../../library/ipaddress.rst:78
msgid ""
"One downside of these convenience functions is that the need to handle both "
"IPv4 and IPv6 formats means that error messages provide minimal information "
"on the precise error, as the functions don't know whether the IPv4 or IPv6 "
"format was intended. More detailed error reporting can be obtained by "
"calling the appropriate version specific class constructors directly."
msgstr ""

#: ../../library/ipaddress.rst:87
msgid "IP Addresses"
msgstr ""

#: ../../library/ipaddress.rst:90
msgid "Address objects"
msgstr ""

#: ../../library/ipaddress.rst:92
msgid ""
"The :class:`IPv4Address` and :class:`IPv6Address` objects share a lot of "
"common attributes.  Some attributes that are only meaningful for IPv6 "
"addresses are also implemented by :class:`IPv4Address` objects, in order to "
"make it easier to write code that handles both IP versions correctly."
msgstr ""

#: ../../library/ipaddress.rst:99
msgid ""
"Construct an IPv4 address.  An :exc:`AddressValueError` is raised if "
"*address* is not a valid IPv4 address."
msgstr ""

#: ../../library/ipaddress.rst:102
msgid "The following constitutes a valid IPv4 address:"
msgstr ""

#: ../../library/ipaddress.rst:104
msgid ""
"A string in decimal-dot notation, consisting of four decimal integers in the"
" inclusive range 0-255, separated by dots (e.g. ``192.168.0.1``). Each "
"integer represents an octet (byte) in the address. Leading zeroes are "
"tolerated only for values less than 8 (as there is no ambiguity between the "
"decimal and octal interpretations of such strings)."
msgstr ""

#: ../../library/ipaddress.rst:109
msgid "An integer that fits into 32 bits."
msgstr ""

#: ../../library/ipaddress.rst:110
msgid ""
"An integer packed into a :class:`bytes` object of length 4 (most significant"
" octet first)."
msgstr ""

#: ../../library/ipaddress.rst:122
msgid "The appropriate version number: ``4`` for IPv4, ``6`` for IPv6."
msgstr ""

#: ../../library/ipaddress.rst:126
msgid ""
"The total number of bits in the address representation for this version: "
"``32`` for IPv4, ``128`` for IPv6."
msgstr ""

#: ../../library/ipaddress.rst:129
msgid ""
"The prefix defines the number of leading bits in an  address that are "
"compared to determine whether or not an address is part of a network."
msgstr ""

#: ../../library/ipaddress.rst:136
msgid ""
"The string representation in dotted decimal notation. Leading zeroes are "
"never included in the representation."
msgstr ""

#: ../../library/ipaddress.rst:139
msgid ""
"As IPv4 does not define a shorthand notation for addresses with octets set "
"to zero, these two attributes are always the same as ``str(addr)`` for IPv4 "
"addresses. Exposing these attributes makes it easier to write display code "
"that can handle both IPv4 and IPv6 addresses."
msgstr ""

#: ../../library/ipaddress.rst:146
msgid ""
"The binary representation of this address - a :class:`bytes` object of the "
"appropriate length (most significant octet first). This is 4 bytes for IPv4 "
"and 16 bytes for IPv6."
msgstr ""

#: ../../library/ipaddress.rst:152
msgid "The name of the reverse DNS PTR record for the IP address, e.g.::"
msgstr ""

#: ../../library/ipaddress.rst:159
msgid ""
"This is the name that could be used for performing a PTR lookup, not the "
"resolved hostname itself."
msgstr ""

#: ../../library/ipaddress.rst:166
msgid ""
"``True`` if the address is reserved for multicast use.  See :RFC:`3171` (for"
" IPv4) or :RFC:`2373` (for IPv6)."
msgstr ""

#: ../../library/ipaddress.rst:171
msgid ""
"``True`` if the address is allocated for private networks.  See iana-ipv4"
"-special-registry_ (for IPv4) or iana-ipv6-special-registry_ (for IPv6)."
msgstr ""

#: ../../library/ipaddress.rst:177
msgid ""
"``True`` if the address is allocated for public networks.  See iana-ipv4"
"-special-registry_ (for IPv4) or iana-ipv6-special-registry_ (for IPv6)."
msgstr ""

#: ../../library/ipaddress.rst:185
msgid ""
"``True`` if the address is unspecified.  See :RFC:`5735` (for IPv4) or "
":RFC:`2373` (for IPv6)."
msgstr ""

#: ../../library/ipaddress.rst:190
msgid "``True`` if the address is otherwise IETF reserved."
msgstr ""

#: ../../library/ipaddress.rst:194
msgid ""
"``True`` if this is a loopback address.  See :RFC:`3330` (for IPv4) or "
":RFC:`2373` (for IPv6)."
msgstr ""

#: ../../library/ipaddress.rst:199
msgid ""
"``True`` if the address is reserved for link-local usage.  See :RFC:`3927`."
msgstr ""

#: ../../library/ipaddress.rst:208
msgid ""
"Construct an IPv6 address.  An :exc:`AddressValueError` is raised if "
"*address* is not a valid IPv6 address."
msgstr ""

#: ../../library/ipaddress.rst:211
msgid "The following constitutes a valid IPv6 address:"
msgstr ""

#: ../../library/ipaddress.rst:213
msgid ""
"A string consisting of eight groups of four hexadecimal digits, each group "
"representing 16 bits.  The groups are separated by colons. This describes an"
" *exploded* (longhand) notation.  The string can also be *compressed* "
"(shorthand notation) by various means.  See :RFC:`4291` for details.  For "
"example, ``\"0000:0000:0000:0000:0000:0abc:0007:0def\"`` can be compressed "
"to ``\"::abc:7:def\"``."
msgstr ""

#: ../../library/ipaddress.rst:220
msgid "An integer that fits into 128 bits."
msgstr ""

#: ../../library/ipaddress.rst:221
msgid ""
"An integer packed into a :class:`bytes` object of length 16, big-endian."
msgstr ""

#: ../../library/ipaddress.rst:228
msgid ""
"The short form of the address representation, with leading zeroes in groups "
"omitted and the longest sequence of groups consisting entirely of zeroes "
"collapsed to a single empty group."
msgstr ""

#: ../../library/ipaddress.rst:232
msgid "This is also the value returned by ``str(addr)`` for IPv6 addresses."
msgstr ""

#: ../../library/ipaddress.rst:236
msgid ""
"The long form of the address representation, with all leading zeroes and "
"groups consisting entirely of zeroes included."
msgstr ""

#: ../../library/ipaddress.rst:240
msgid ""
"For the following attributes, see the corresponding documention of the "
":class:`IPv4Address` class:"
msgstr ""

#: ../../library/ipaddress.rst:255
msgid "is_global"
msgstr ""

#: ../../library/ipaddress.rst:260
msgid ""
"``True`` if the address is reserved for site-local usage.  Note that the "
"site-local address space has been deprecated by :RFC:`3879`. Use "
":attr:`~IPv4Address.is_private` to test if this address is in the space of "
"unique local addresses as defined by :RFC:`4193`."
msgstr ""

#: ../../library/ipaddress.rst:267
msgid ""
"For addresses that appear to be IPv4 mapped addresses (starting with "
"``::FFFF/96``), this property will report the embedded IPv4 address. For any"
" other address, this property will be ``None``."
msgstr ""

#: ../../library/ipaddress.rst:273
msgid ""
"For addresses that appear to be 6to4 addresses  (starting with "
"``2002::/16``) as defined by :RFC:`3056`, this property will report the "
"embedded IPv4 address.  For any other address, this property will be "
"``None``."
msgstr ""

#: ../../library/ipaddress.rst:280
msgid ""
"For addresses that appear to be Teredo addresses (starting with "
"``2001::/32``) as defined by :RFC:`4380`, this property will report the "
"embedded ``(server, client)`` IP address pair.  For any other address, this "
"property will be ``None``."
msgstr ""

#: ../../library/ipaddress.rst:287
msgid "Conversion to Strings and Integers"
msgstr ""

#: ../../library/ipaddress.rst:289
msgid ""
"To interoperate with networking interfaces such as the socket module, "
"addresses must be converted to strings or integers. This is handled using "
"the :func:`str` and :func:`int` builtin functions::"
msgstr ""

#: ../../library/ipaddress.rst:304 ../../library/ipaddress.rst:634
msgid "Operators"
msgstr ""

#: ../../library/ipaddress.rst:306
msgid ""
"Address objects support some operators.  Unless stated otherwise, operators "
"can only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 "
"with IPv6)."
msgstr ""

#: ../../library/ipaddress.rst:312
msgid "Comparison operators"
msgstr ""

#: ../../library/ipaddress.rst:314
msgid ""
"Address objects can be compared with the usual set of comparison operators."
"  Some examples::"
msgstr ""

#: ../../library/ipaddress.rst:326
msgid "Arithmetic operators"
msgstr ""

#: ../../library/ipaddress.rst:328
msgid ""
"Integers can be added to or subtracted from address objects.  Some "
"examples::"
msgstr ""

#: ../../library/ipaddress.rst:341
msgid "IP Network definitions"
msgstr ""

#: ../../library/ipaddress.rst:343
msgid ""
"The :class:`IPv4Network` and :class:`IPv6Network` objects provide a "
"mechanism for defining and inspecting IP network definitions.  A network "
"definition consists of a *mask* and a *network address*, and as such defines"
" a range of IP addresses that equal the network address when masked (binary "
"AND) with the mask.  For example, a network definition with the mask "
"``255.255.255.0`` and the network address ``192.168.1.0`` consists of IP "
"addresses in the inclusive range ``192.168.1.0`` to ``192.168.1.255``."
msgstr ""

#: ../../library/ipaddress.rst:353
msgid "Prefix, net mask and host mask"
msgstr ""

#: ../../library/ipaddress.rst:355
msgid ""
"There are several equivalent ways to specify IP network masks.  A *prefix* "
"``/<nbits>`` is a notation that denotes how many high-order bits are set in "
"the network mask.  A *net mask* is an IP address with some number of high-"
"order bits set.  Thus the prefix ``/24`` is equivalent to the net mask "
"``255.255.255.0`` in IPv4, or ``ffff:ff00::`` in IPv6.  In addition, a *host"
" mask* is the logical inverse of a *net mask*, and is sometimes used (for "
"example in Cisco access control lists) to denote a network mask.  The host "
"mask equivalent to ``/24`` in IPv4 is ``0.0.0.255``."
msgstr ""

#: ../../library/ipaddress.rst:366
msgid "Network objects"
msgstr ""

#: ../../library/ipaddress.rst:368
msgid ""
"All attributes implemented by address objects are implemented by network "
"objects as well.  In addition, network objects implement additional "
"attributes. All of these are common between :class:`IPv4Network` and "
":class:`IPv6Network`, so to avoid duplication they are only documented for "
":class:`IPv4Network`."
msgstr ""

#: ../../library/ipaddress.rst:375
msgid ""
"Construct an IPv4 network definition.  *address* can be one of the "
"following:"
msgstr ""

#: ../../library/ipaddress.rst:377
msgid ""
"A string consisting of an IP address and an optional mask, separated by a "
"slash (``/``).  The IP address is the network address, and the mask can be "
"either a single number, which means it's a *prefix*, or a string "
"representation of an IPv4 address.  If it's the latter, the mask is "
"interpreted as a *net mask* if it starts with a non-zero field, or as a "
"*host mask* if it starts with a zero field.  If no mask is provided, it's "
"considered to be ``/32``."
msgstr ""

#: ../../library/ipaddress.rst:385
msgid ""
"For example, the following *address* specifications are equivalent: "
"``192.168.1.0/24``, ``192.168.1.0/255.255.255.0`` and "
"``192.168.1.0/0.0.0.255``."
msgstr ""

#: ../../library/ipaddress.rst:389
msgid ""
"An integer that fits into 32 bits.  This is equivalent to a single-address "
"network, with the network address being *address* and the mask being "
"``/32``."
msgstr ""

#: ../../library/ipaddress.rst:393
msgid ""
"An integer packed into a :class:`bytes` object of length 4, big-endian. The "
"interpretation is similar to an integer *address*."
msgstr ""

#: ../../library/ipaddress.rst:396
msgid ""
"A two-tuple of an address description and a netmask, where the address "
"description is either a string, a 32-bits integer, a 4-bytes packed integer,"
" or an existing IPv4Address object; and the netmask is either an integer "
"representing the prefix length (e.g. ``24``) or a string representing the "
"prefix mask (e.g. ``255.255.255.0``)."
msgstr ""

#: ../../library/ipaddress.rst:402
msgid ""
"An :exc:`AddressValueError` is raised if *address* is not a valid IPv4 "
"address.  A :exc:`NetmaskValueError` is raised if the mask is not valid for "
"an IPv4 address."
msgstr ""

#: ../../library/ipaddress.rst:406 ../../library/ipaddress.rst:591
msgid ""
"If *strict* is ``True`` and host bits are set in the supplied address, then "
":exc:`ValueError` is raised.  Otherwise, the host bits are masked out to "
"determine the appropriate network address."
msgstr ""

#: ../../library/ipaddress.rst:410
msgid ""
"Unless stated otherwise, all network methods accepting other network/address"
" objects will raise :exc:`TypeError` if the argument's IP version is "
"incompatible to ``self``"
msgstr ""

#: ../../library/ipaddress.rst:416 ../../library/ipaddress.rst:597
msgid "Added the two-tuple form for the *address* constructor parameter."
msgstr ""

#: ../../library/ipaddress.rst:421
msgid ""
"Refer to the corresponding attribute documentation in :class:`IPv4Address`"
msgstr ""

#: ../../library/ipaddress.rst:431
msgid ""
"These attributes are true for the network as a whole if they are true for "
"both the network address and the broadcast address"
msgstr ""

#: ../../library/ipaddress.rst:436
msgid ""
"The network address for the network. The network address and the prefix "
"length together uniquely define a network."
msgstr ""

#: ../../library/ipaddress.rst:441
msgid ""
"The broadcast address for the network. Packets sent to the broadcast address"
" should be received by every host on the network."
msgstr ""

#: ../../library/ipaddress.rst:446
msgid "The host mask, as a string."
msgstr ""

#: ../../library/ipaddress.rst:452
msgid ""
"A string representation of the network, with the mask in prefix notation."
msgstr ""

#: ../../library/ipaddress.rst:455
msgid ""
"``with_prefixlen`` and ``compressed`` are always the same as "
"``str(network)``. ``exploded`` uses the exploded form the network address."
msgstr ""

#: ../../library/ipaddress.rst:461
msgid ""
"A string representation of the network, with the mask in net mask notation."
msgstr ""

#: ../../library/ipaddress.rst:466
msgid ""
"A string representation of the network, with the mask in host mask notation."
msgstr ""

#: ../../library/ipaddress.rst:471
msgid "The total number of addresses in the network."
msgstr ""

#: ../../library/ipaddress.rst:475
msgid "Length of the network prefix, in bits."
msgstr ""

#: ../../library/ipaddress.rst:479
msgid ""
"Returns an iterator over the usable hosts in the network.  The usable hosts "
"are all the IP addresses that belong to the network, except the network "
"address itself and the network broadcast address."
msgstr ""

#: ../../library/ipaddress.rst:490
msgid ""
"``True`` if this network is partly or wholly contained in *other* or *other*"
" is wholly contained in this network."
msgstr ""

#: ../../library/ipaddress.rst:495
msgid ""
"Computes the network definitions resulting from removing the given *network*"
" from this one.  Returns an iterator of network objects. Raises "
":exc:`ValueError` if *network* is not completely contained in this network."
msgstr ""

#: ../../library/ipaddress.rst:508
msgid ""
"The subnets that join to make the current network definition, depending on "
"the argument values.  *prefixlen_diff* is the amount our prefix length "
"should be increased by.  *new_prefix* is the desired new prefix of the "
"subnets; it must be larger than our prefix.  One and only one of "
"*prefixlen_diff* and *new_prefix* must be set.  Returns an iterator of "
"network objects."
msgstr ""

#: ../../library/ipaddress.rst:533
msgid ""
"The supernet containing this network definition, depending on the argument "
"values.  *prefixlen_diff* is the amount our prefix length should be "
"decreased by.  *new_prefix* is the desired new prefix of the supernet; it "
"must be smaller than our prefix.  One and only one of *prefixlen_diff* and "
"*new_prefix* must be set.  Returns a single network object."
msgstr ""

#: ../../library/ipaddress.rst:549
msgid ""
"Compare this network to *other*.  In this comparison only the network "
"addresses are considered; host bits aren't.  Returns either ``-1``, ``0`` or"
" ``1``."
msgstr ""

#: ../../library/ipaddress.rst:563
msgid ""
"Construct an IPv6 network definition.  *address* can be one of the "
"following:"
msgstr ""

#: ../../library/ipaddress.rst:565
msgid ""
"A string consisting of an IP address and an optional mask, separated by a "
"slash (``/``).  The IP address is the network address, and the mask can be "
"either a single number, which means it's a *prefix*, or a string "
"representation of an IPv6 address.  If it's the latter, the mask is "
"interpreted as a *net mask*.  If no mask is provided, it's considered to be "
"``/128``."
msgstr ""

#: ../../library/ipaddress.rst:572
msgid ""
"For example, the following *address* specifications are equivalent: "
"``2001:db00::0/24`` and ``2001:db00::0/ffff:ff00::``."
msgstr ""

#: ../../library/ipaddress.rst:575
msgid ""
"An integer that fits into 128 bits.  This is equivalent to a single-address "
"network, with the network address being *address* and the mask being "
"``/128``."
msgstr ""

#: ../../library/ipaddress.rst:579
msgid ""
"An integer packed into a :class:`bytes` object of length 16, big-endian. The"
" interpretation is similar to an integer *address*."
msgstr ""

#: ../../library/ipaddress.rst:582
msgid ""
"A two-tuple of an address description and a netmask, where the address "
"description is either a string, a 128-bits integer, a 16-bytes packed "
"integer, or an existing IPv6Address object; and the netmask is an integer "
"representing the prefix length."
msgstr ""

#: ../../library/ipaddress.rst:587
msgid ""
"An :exc:`AddressValueError` is raised if *address* is not a valid IPv6 "
"address.  A :exc:`NetmaskValueError` is raised if the mask is not valid for "
"an IPv6 address."
msgstr ""

#: ../../library/ipaddress.rst:624
msgid ""
"Refer to the corresponding attribute documentation in :class:`IPv4Network`"
msgstr ""

#: ../../library/ipaddress.rst:629
msgid ""
"These attribute is true for the network as a whole if it is true for both "
"the network address and the broadcast address"
msgstr ""

#: ../../library/ipaddress.rst:636
msgid ""
"Network objects support some operators.  Unless stated otherwise, operators "
"can only be applied between compatible objects (i.e. IPv4 with IPv4, IPv6 "
"with IPv6)."
msgstr ""

#: ../../library/ipaddress.rst:642
msgid "Logical operators"
msgstr ""

#: ../../library/ipaddress.rst:644
msgid ""
"Network objects can be compared with the usual set of logical operators, "
"similarly to address objects."
msgstr ""

#: ../../library/ipaddress.rst:649
msgid "Iteration"
msgstr ""

#: ../../library/ipaddress.rst:651
msgid ""
"Network objects can be iterated to list all the addresses belonging to the "
"network.  For iteration, *all* hosts are returned, including unusable hosts "
"(for usable hosts, use the :meth:`~IPv4Network.hosts` method).  An example::"
msgstr ""

#: ../../library/ipaddress.rst:678
msgid "Networks as containers of addresses"
msgstr ""

#: ../../library/ipaddress.rst:680
msgid "Network objects can act as containers of addresses.  Some examples::"
msgstr ""

#: ../../library/ipaddress.rst:693
msgid "Interface objects"
msgstr ""

#: ../../library/ipaddress.rst:697
msgid ""
"Construct an IPv4 interface.  The meaning of *address* is as in the "
"constructor of :class:`IPv4Network`, except that arbitrary host addresses "
"are always accepted."
msgstr ""

#: ../../library/ipaddress.rst:701
msgid ""
":class:`IPv4Interface` is a subclass of :class:`IPv4Address`, so it inherits"
" all the attributes from that class.  In addition, the following attributes "
"are available:"
msgstr ""

#: ../../library/ipaddress.rst:707
msgid "The address (:class:`IPv4Address`) without network information."
msgstr ""

#: ../../library/ipaddress.rst:715
msgid "The network (:class:`IPv4Network`) this interface belongs to."
msgstr ""

#: ../../library/ipaddress.rst:723
msgid ""
"A string representation of the interface with the mask in prefix notation."
msgstr ""

#: ../../library/ipaddress.rst:731
msgid ""
"A string representation of the interface with the network as a net mask."
msgstr ""

#: ../../library/ipaddress.rst:739
msgid ""
"A string representation of the interface with the network as a host mask."
msgstr ""

#: ../../library/ipaddress.rst:748
msgid ""
"Construct an IPv6 interface.  The meaning of *address* is as in the "
"constructor of :class:`IPv6Network`, except that arbitrary host addresses "
"are always accepted."
msgstr ""

#: ../../library/ipaddress.rst:752
msgid ""
":class:`IPv6Interface` is a subclass of :class:`IPv6Address`, so it inherits"
" all the attributes from that class.  In addition, the following attributes "
"are available:"
msgstr ""

#: ../../library/ipaddress.rst:762
msgid ""
"Refer to the corresponding attribute documentation in "
":class:`IPv4Interface`."
msgstr ""

#: ../../library/ipaddress.rst:767
msgid "Other Module Level Functions"
msgstr ""

#: ../../library/ipaddress.rst:769
msgid "The module also provides the following module level functions:"
msgstr ""

#: ../../library/ipaddress.rst:773
msgid ""
"Represent an address as 4 packed bytes in network (big-endian) order. "
"*address* is an integer representation of an IPv4 IP address.  A "
":exc:`ValueError` is raised if the integer is negative or too large to be an"
" IPv4 IP address."
msgstr ""

#: ../../library/ipaddress.rst:786
msgid ""
"Represent an address as 16 packed bytes in network (big-endian) order. "
"*address* is an integer representation of an IPv6 IP address.  A "
":exc:`ValueError` is raised if the integer is negative or too large to be an"
" IPv6 IP address."
msgstr ""

#: ../../library/ipaddress.rst:794
msgid ""
"Return an iterator of the summarized network range given the first and last "
"IP addresses.  *first* is the first :class:`IPv4Address` or "
":class:`IPv6Address` in the range and *last* is the last "
":class:`IPv4Address` or :class:`IPv6Address` in the range.  A "
":exc:`TypeError` is raised if *first* or *last* are not IP addresses or are "
"not of the same version.  A :exc:`ValueError` is raised if *last* is not "
"greater than *first* or if *first* address version is not 4 or 6."
msgstr ""

#: ../../library/ipaddress.rst:810
msgid ""
"Return an iterator of the collapsed :class:`IPv4Network` or "
":class:`IPv6Network` objects.  *addresses* is an iterator of "
":class:`IPv4Network` or :class:`IPv6Network` objects.  A :exc:`TypeError` is"
" raised if *addresses* contains mixed version objects."
msgstr ""

#: ../../library/ipaddress.rst:823
msgid ""
"Return a key suitable for sorting between networks and addresses.  Address "
"and Network objects are not sortable by default; they're fundamentally "
"different, so the expression::"
msgstr ""

#: ../../library/ipaddress.rst:829
msgid ""
"doesn't make sense.  There are some times however, where you may wish to "
"have :mod:`ipaddress` sort these anyway.  If you need to do this, you can "
"use this function as the ``key`` argument to :func:`sorted()`."
msgstr ""

#: ../../library/ipaddress.rst:833
msgid "*obj* is either a network or address object."
msgstr ""

#: ../../library/ipaddress.rst:837
msgid "Custom Exceptions"
msgstr ""

#: ../../library/ipaddress.rst:839
msgid ""
"To support more specific error reporting from class constructors, the module"
" defines the following exceptions:"
msgstr ""

#: ../../library/ipaddress.rst:844
msgid "Any value error related to the address."
msgstr ""

#: ../../library/ipaddress.rst:849
msgid "Any value error related to the netmask."
msgstr ""
