# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2015, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5 TW\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-12-09 21:33+0800\n"
"PO-Revision-Date: 2015-12-09 17:51+0000\n"
"Last-Translator: Liang Bo Wang <ccwang002@gmail.com>\n"
"Language-Team: Chinese Traditional (http://www.transifex.com/python-tw-doc/python-35-tw/language/zh-Hant/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh-Hant\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/xml.rst:4
msgid "XML Processing Modules"
msgstr ""

#: ../../library/xml.rst:12
msgid ""
"Python's interfaces for processing XML are grouped in the ``xml`` package."
msgstr ""

#: ../../library/xml.rst:16
msgid ""
"The XML modules are not secure against erroneous or maliciously constructed "
"data.  If you need to parse untrusted or unauthenticated data see the :ref"
":`xml-vulnerabilities` and :ref:`defused-packages` sections."
msgstr ""

#: ../../library/xml.rst:21
msgid ""
"It is important to note that modules in the :mod:`xml` package require that "
"there be at least one SAX-compliant XML parser available. The Expat parser "
"is included with Python, so the :mod:`xml.parsers.expat` module will always "
"be available."
msgstr ""

#: ../../library/xml.rst:26
msgid ""
"The documentation for the :mod:`xml.dom` and :mod:`xml.sax` packages are the"
" definition of the Python bindings for the DOM and SAX interfaces."
msgstr ""

#: ../../library/xml.rst:29
msgid "The XML handling submodules are:"
msgstr ""

#: ../../library/xml.rst:31
msgid ""
":mod:`xml.etree.ElementTree`: the ElementTree API, a simple and lightweight "
"XML processor"
msgstr ""

#: ../../library/xml.rst:36
msgid ":mod:`xml.dom`: the DOM API definition"
msgstr ""

#: ../../library/xml.rst:37
msgid ":mod:`xml.dom.minidom`: a minimal DOM implementation"
msgstr ""

#: ../../library/xml.rst:38
msgid ":mod:`xml.dom.pulldom`: support for building partial DOM trees"
msgstr ""

#: ../../library/xml.rst:42
msgid ":mod:`xml.sax`: SAX2 base classes and convenience functions"
msgstr ""

#: ../../library/xml.rst:43
msgid ":mod:`xml.parsers.expat`: the Expat parser binding"
msgstr ""

#: ../../library/xml.rst:49
msgid "XML vulnerabilities"
msgstr ""

#: ../../library/xml.rst:51
msgid ""
"The XML processing modules are not secure against maliciously constructed "
"data. An attacker can abuse XML features to carry out denial of service "
"attacks, access local files, generate network connections to other machines,"
" or circumvent firewalls."
msgstr ""

#: ../../library/xml.rst:56
msgid ""
"The following table gives an overview of the known attacks and whether the "
"various modules are vulnerable to them."
msgstr ""

#: ../../library/xml.rst:60
msgid "kind"
msgstr ""

#: ../../library/xml.rst:60
msgid "sax"
msgstr ""

#: ../../library/xml.rst:60
msgid "etree"
msgstr ""

#: ../../library/xml.rst:60
msgid "minidom"
msgstr ""

#: ../../library/xml.rst:60
msgid "pulldom"
msgstr ""

#: ../../library/xml.rst:60
msgid "xmlrpc"
msgstr ""

#: ../../library/xml.rst:62
msgid "billion laughs"
msgstr ""

#: ../../library/xml.rst:62 ../../library/xml.rst:62 ../../library/xml.rst:62
#: ../../library/xml.rst:62 ../../library/xml.rst:62 ../../library/xml.rst:63
#: ../../library/xml.rst:63 ../../library/xml.rst:63 ../../library/xml.rst:63
#: ../../library/xml.rst:63 ../../library/xml.rst:64 ../../library/xml.rst:64
#: ../../library/xml.rst:65 ../../library/xml.rst:65 ../../library/xml.rst:66
msgid "**Yes**"
msgstr ""

#: ../../library/xml.rst:63
msgid "quadratic blowup"
msgstr ""

#: ../../library/xml.rst:64 ../../library/xml.rst:93
msgid "external entity expansion"
msgstr ""

#: ../../library/xml.rst:64
msgid "No    (1)"
msgstr ""

#: ../../library/xml.rst:64
msgid "No    (2)"
msgstr ""

#: ../../library/xml.rst:64
msgid "No    (3)"
msgstr ""

#: ../../library/xml.rst:65 ../../library/xml.rst:98
msgid "DTD retrieval"
msgstr ""

#: ../../library/xml.rst:65 ../../library/xml.rst:65 ../../library/xml.rst:65
#: ../../library/xml.rst:66 ../../library/xml.rst:66 ../../library/xml.rst:66
#: ../../library/xml.rst:66
msgid "No"
msgstr ""

#: ../../library/xml.rst:66 ../../library/xml.rst:105
msgid "decompression bomb"
msgstr ""

#: ../../library/xml.rst:69
msgid ""
":mod:`xml.etree.ElementTree` doesn't expand external entities and raises a "
":exc:`ParserError` when an entity occurs."
msgstr ""

#: ../../library/xml.rst:71
msgid ""
":mod:`xml.dom.minidom` doesn't expand external entities and simply returns "
"the unexpanded entity verbatim."
msgstr ""

#: ../../library/xml.rst:73
msgid ":mod:`xmlrpclib` doesn't expand external entities and omits them."
msgstr ""

#: ../../library/xml.rst:81
msgid "billion laughs / exponential entity expansion"
msgstr ""

#: ../../library/xml.rst:77
msgid ""
"The `Billion Laughs`_ attack -- also known as exponential entity expansion "
"-- uses multiple levels of nested entities. Each entity refers to another "
"entity several times, and the final entity definition contains a small "
"string. The exponential expansion results in several gigabytes of text and "
"consumes lots of memory and CPU time."
msgstr ""

#: ../../library/xml.rst:88
msgid "quadratic blowup entity expansion"
msgstr ""

#: ../../library/xml.rst:84
msgid ""
"A quadratic blowup attack is similar to a `Billion Laughs`_ attack; it "
"abuses entity expansion, too. Instead of nested entities it repeats one "
"large entity with a couple of thousand chars over and over again. The attack"
" isn't as efficient as the exponential case but it avoids triggering parser "
"countermeasures that forbid deeply-nested entities."
msgstr ""

#: ../../library/xml.rst:91
msgid ""
"Entity declarations can contain more than just text for replacement. They "
"can also point to external resources or local files. The XML parser accesses"
" the resource and embeds the content into the XML document."
msgstr ""

#: ../../library/xml.rst:96
msgid ""
"Some XML libraries like Python's :mod:`xml.dom.pulldom` retrieve document "
"type definitions from remote or local locations. The feature has similar "
"implications as the external entity expansion issue."
msgstr ""

#: ../../library/xml.rst:101
msgid ""
"Decompression bombs (aka `ZIP bomb`_) apply to all XML libraries that can "
"parse compressed XML streams such as gzipped HTTP streams or LZMA-compressed"
" files. For an attacker it can reduce the amount of transmitted data by "
"three magnitudes or more."
msgstr ""

#: ../../library/xml.rst:107
msgid ""
"The documentation for `defusedxml`_ on PyPI has further information about "
"all known attack vectors with examples and references."
msgstr ""

#: ../../library/xml.rst:113
msgid "The :mod:`defusedxml` and :mod:`defusedexpat` Packages"
msgstr ""

#: ../../library/xml.rst:115
msgid ""
"`defusedxml`_ is a pure Python package with modified subclasses of all "
"stdlib XML parsers that prevent any potentially malicious operation. Use of "
"this package is recommended for any server code that parses untrusted XML "
"data. The package also ships with example exploits and extended "
"documentation on more XML exploits such as XPath injection."
msgstr ""

#: ../../library/xml.rst:121
msgid ""
"`defusedexpat`_ provides a modified libexpat and a patched :mod:`pyexpat` "
"module that have countermeasures against entity expansion DoS attacks. The "
":mod:`defusedexpat` module still allows a sane and configurable amount of "
"entity expansions. The modifications may be included in some future release "
"of Python, but will not be included in any bugfix releases of Python because"
" they break backward compatibility."
msgstr ""
